{"version":3,"sources":["uni-app:///main.js","webpack:////Users/mayongjian/Desktop/hongshu_boot/uniapp_hongshu/pages/message/privateChat/privateChat.vue?7ae7","webpack:////Users/mayongjian/Desktop/hongshu_boot/uniapp_hongshu/pages/message/privateChat/privateChat.vue?8412","webpack:////Users/mayongjian/Desktop/hongshu_boot/uniapp_hongshu/pages/message/privateChat/privateChat.vue?024a","webpack:////Users/mayongjian/Desktop/hongshu_boot/uniapp_hongshu/pages/message/privateChat/privateChat.vue?6ba4","uni-app:///pages/message/privateChat/privateChat.vue","webpack:////Users/mayongjian/Desktop/hongshu_boot/uniapp_hongshu/pages/message/privateChat/privateChat.vue?e55a","webpack:////Users/mayongjian/Desktop/hongshu_boot/uniapp_hongshu/pages/message/privateChat/privateChat.vue?68cf"],"names":["wx","__webpack_require_UNI_MP_PLUGIN__","__webpack_require__","createPage","Page","name","data","text","friend","to","currentUser","emoji","url","map","visible","decoder","otherTypesMessagePanelVisible","history","messages","allLoaded","loading","audio","startTime","recording","audioPlayer","innerAudioContext","playingMessage","videoPlayer","context","actionPopup","message","recallable","messageSelector","onLoad","onShow","onReady","onPullDownRefresh","onUnload","methods","getUserInfo","uid","id","type","avatar","uni","title","renderTextMessage","renderMessageDate","initialGoEasyListeners","onMessageReceived","onMessageDeleted","deletedMessages","initialAudioPlayer","initRecorderListeners","recorderManager","icon","duration","res","file","notification","body","sound","badge","onProgress","console","onSuccess","onFailed","getImageHeight","sendMessage","sendTextMessage","sendVideoMessage","success","sendImageMessage","count","showActionPopup","hideActionPopup","deleteSingleMessage","content","deleteMultipleMessages","deleteMessage","recallMessage","editRecalledMessage","showCheckBox","selectMessages","selectedMessages","loadHistoryMessage","lastMessageTimeStamp","userId","lastTimestamp","limit","switchAudioKeyboard","scope","fail","onRecordStart","onRecordEnd","showImageFullScreen","urls","playVideo","direction","playAudio","onVideoFullScreenChange","messageInputFocusin","switchEmojiKeyboard","showOtherTypesMessagePanel","chooseEmoji","showOrderMessageList","hideOrderMessageList","scrollToBottom","scrollTop","markPrivateMessageAsRead"],"mappings":";;;;;;;;;;;;;AAAA;AAGA;AACA;AAHA;AACAA,EAAE,CAACC,iCAAiC,GAAGC,mBAAmB;AAG1DC,UAAU,CAACC,oBAAI,CAAC,C;;;;;;;;;;;;;ACLhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoI;AACpI;AAC+D;AACL;AACqC;;;AAG/F;AACmN;AACnN,gBAAgB,iNAAU;AAC1B,EAAE,iFAAM;AACR,EAAE,kGAAM;AACR,EAAE,2GAAe;AACjB;AACA;AACA;AACA;AACA;AACA,EAAE,sGAAU;AACZ;AACA;;AAEA;AACe,gF;;;;;;;;;;;;ACvBf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA,aAAa,6SAEN;AACP,KAAK;AACL;AACA,aAAa,uSAEN;AACP,KAAK;AACL;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACxGA;AAAA;AAAA;AAAA;AAAw1B,CAAgB,yyBAAG,EAAC,C;;;;;;;;;;;;;;;;;;;ACqJ52B;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;AACA;AACA;AAAA,eACA;EACAC;EACAC;IACA;IACA;MACA;MACA;MACA;MACA;MACA;MACA;IACA;IACA;MACA;;MAEAC;MACAC;MACAC;MAAA;MACAC;MAEA;MACAC;QACAC;QACAC;QACAC;QACAC;MACA;MACA;MACAC;MAEAC;QACAC;QACAC;QACAC;MACA;MACAC;QACAC;QACA;QACAC;QACA;QACAT;MACA;MACAU;QACAC;QACAC;MACA;MACAC;QACAb;QACAF;QACAgB;MACA;MACA;MACAC;QACAf;QACAgB;QACAC;MACA;MACA;MACAC;QACAlB;QACAI;MACA;IACA;EACA;EACAe;IACA;IACA;IACA;EACA;EACAC;IACA;IACA;EACA;EACAC;IACA;IACA;EAAA,CACA;EACAC;IACA;EACA;EACAC;IACA;IACA;IACA;EACA;EACAC;IAEAC;MAAA;MACA;QACAC;MACA;MACA;QACA;QACA;QAEA;UACAC;UACAC;UACApC;YACAD;YACAsC;UACA;QACA;QAEA;QACA;QACA;QACA;QACA;QAEA;QACA;QACAC;UAAAC;QAAA;MACA;IAEA;IACA;IACA;IACAC;MACA;IACA;IACA;IACA;IACAC;MACA;QACA;MACA;QACA;UACA;QACA;MACA;MACA;IACA;IACAC;MACA;MACA;MACA;MACA;IACA;IACAC;MACA;MACA;MACA;MACA;QACA;QACA;QACA;QACA;QACA;MACA;IACA;IACAC;MAAA;MACAC;QACA;QACA;QACA;QACA;UACA;UACA;YACA;UACA;QACA;MACA;IACA;IACAC;MAAA;MACA;MACA;QACA;MACA;MACA;QACA;MACA;IACA;IACAC;MAAA;MACA;MACAC;QACA;QACA;MACA;MACA;MACAA;QACA;QACA;QACA;QACA;UACAV;YACAW;YACAV;YACAW;UACA;UACA;QACA;QACAC;QACA;UACAhD;UACAiD;UACAC;YACAd;YACAe;YAAA;YACAC;YACAC;UACA;UACAC;YACAC;UACA;UACAC;YACA;UACA;UACAC;YACAF;UACA;QACA;MACA;MACA;MACAV;QACA;QACAA;QACAV;UACAW;UACAV;UACAW;QACA;MACA;IACA;IACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACAW;MACA;QACA;MACA;QACA;MACA;QACA;MACA;IACA;IACAC;MACA;MACA;MACA;QACAtC;QACAmC;UAEAD;QACA;QACAE;UACA;YACAF;UACA;YACAA;UACA;QACA;MACA;IACA;IACAK;MAAA;MACA;QACA;QACA;UACAT;QACA;QACA;UACArD;UACAE;UACAkD;YACAd;YACAe;YACAC;YACAC;UACA;UACAG;YACA;UACA;UACAC;YACAF;UACA;QACA;MACA;MACA;IACA;IACAM;MAAA;MACA1B;QACA2B;UACA;YACA9D;YACAiD;YACAC;cACAd;cACAe;cAAA;cACAC;cACAC;YACA;YACAC;cACAC;YACA;YACAC;cACA;cACA;YACA;YACAC;cACAF;YACA;UACA;QACA;MACA;IACA;IACAQ;MAAA;MACA5B;QACA6B;QACAF;UACAd;YACA;cACAhD;cACAiD;cACAC;gBACAd;gBACAe;gBAAA;gBACAC;gBACAC;cACA;cACAC;gBACAC;cACA;cACAC;gBACA;gBACA;cACA;cACAC;gBACAF;cACA;YACA;UACA;QACA;MACA;IACA;IAEAU;MACA;MACA;MACA;QACA;MACA;QACA;MACA;MACA;IACA;IACAC;MACA;MACA;IACA;IACAC;MAAA;MACAhC;QACAiC;QACAN;UACA;UACA;YACA;UACA;QACA;MACA;IACA;IACAO;MAAA;MACA;QACAlC;UACAiC;UACAN;YACA;YACA;cACA;YACA;UACA;QACA;MACA;IACA;IACAQ;MAAA;MACA;QACA7D;QACA+C;UACA;YACA;YACA;cACA;YACA;UACA;UACA;QACA;QACAC;UACAF;QACA;MACA;IACA;IACAgB;MACA;MACA;QACA9D;QACA+C;UACAD;QACA;QACAE;UACAF;QACA;MACA;IACA;IACAiB;MACA;QACA;MACA;MACA;IACA;IACAC;MACA;MACA;MACA;IACA;IACAC;MACA;MACA;MACA;QACA;UACAC;QACA;MACA;MACA;IACA;IACAC;MAAA;MAAA;MACA;MACA;MACA;MACA;QACAC;MACA;MACA;QACAC;QACAC;QACAC;QACAxB;UACArB;UACA;UACA;UACA;YACA;UACA;YACA;cACA;YACA;cACA;YACA;YACA;cACA;YACA;YACA;cACA;cACA;cACA;YACA;UACA;QACA;QACAsB;UACA;UACAF;UACApB;UACA;QACA;MACA;IACA;IACA;IACA8C;MACA;MACA;QACA9C;UACA+C;UACAC;YACAhD;cACAC;cACAgC;YACA;UACA;QACA;MACA;IACA;IACAgB;MACA;QACA;QACAvC;UACAE;QACA;MACA;QACAZ;UACAC;UACAgC;QACA;MACA;IACA;IACAiB;MACA;QACAxC;MACA;QACAU;MACA;IACA;IACA+B;MACA;MACAnD;QACAoD;MACA;IACA;IACAC;MAAA;MACA;MACA;MACA;QACA;UACAC;QACA;QACA;MACA;IACA;IACAC;MACA;MAEA;QACA;QACA;QACA;UACA;QACA;MACA;MACA;MACA;MACA;IACA;IACAC;MACA;MACA;QACA;QACA;MACA;IACA;IACAC;MACA;MACA;IACA;IACAC;MACA;MACA;IACA;IACAC;MACA;MACA;IACA;IACAC;MACA;IACA;IACAC;MACA;MACA;IACA;IACAC;MACA;IACA;IACAC;MACA;QACA/D;UACAgE;UACApD;QACA;MACA;IACA;IACAqD;MACA;QACApE;QACAC;QACAuB;UACAD;QACA;QACAE;UACAF;QACA;MACA;IACA;EACA;AACA;AAAA,2B;;;;;;;;;;;;;ACzuBA;AAAA;AAAA;AAAA;AAAmuC,CAAgB,8nCAAG,EAAC,C;;;;;;;;;;;ACAvvC;AACA,OAAO,KAAU,EAAE,kBAKd","file":"pages/message/privateChat/privateChat.js","sourcesContent":["import 'uni-pages';\n// @ts-ignore\nwx.__webpack_require_UNI_MP_PLUGIN__ = __webpack_require__;\nimport Vue from 'vue'\nimport Page from './pages/message/privateChat/privateChat.vue'\ncreatePage(Page)","import { render, staticRenderFns, recyclableRender, components } from \"./privateChat.vue?vue&type=template&id=cd130814&scoped=true&\"\nvar renderjs\nimport script from \"./privateChat.vue?vue&type=script&lang=js&\"\nexport * from \"./privateChat.vue?vue&type=script&lang=js&\"\nimport style0 from \"./privateChat.vue?vue&type=style&index=0&id=cd130814&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"cd130814\",\n  null,\n  false,\n  components,\n  renderjs\n)\n\ncomponent.options.__file = \"pages/message/privateChat/privateChat.vue\"\nexport default component.exports","export * from \"-!../../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--17-0!../../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/template.js!../../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/page-meta.js!../../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./privateChat.vue?vue&type=template&id=cd130814&scoped=true&\"","var components\ntry {\n  components = {\n    tuiNavigationBar: function () {\n      return import(\n        /* webpackChunkName: \"node-modules/thorui-uni/lib/thorui/tui-navigation-bar/tui-navigation-bar\" */ \"thorui-uni/lib/thorui/tui-navigation-bar/tui-navigation-bar.vue\"\n      )\n    },\n    tuiIcon: function () {\n      return import(\n        /* webpackChunkName: \"node-modules/thorui-uni/lib/thorui/tui-icon/tui-icon\" */ \"thorui-uni/lib/thorui/tui-icon/tui-icon.vue\"\n      )\n    },\n  }\n} catch (e) {\n  if (\n    e.message.indexOf(\"Cannot find module\") !== -1 &&\n    e.message.indexOf(\".vue\") !== -1\n  ) {\n    console.error(e.message)\n    console.error(\"1. 排查组件名称拼写是否正确\")\n    console.error(\n      \"2. 排查组件是否符合 easycom 规范，文档：https://uniapp.dcloud.net.cn/collocation/pages?id=easycom\"\n    )\n    console.error(\n      \"3. 若组件不符合 easycom 规范，需手动引入，并在 components 中注册该组件\"\n    )\n  } else {\n    throw e\n  }\n}\nvar render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  var l0 = _vm.__map(_vm.history.messages, function (message, index) {\n    var $orig = _vm.__get_orig(message)\n    var m0 = _vm.renderMessageDate(message, index)\n    var g0 =\n      message.recalled && message.recaller.id === _vm.currentUser.id\n        ? message.type === \"text\" && Date.now() - message.timestamp < 60 * 1000\n        : null\n    var g1 = !message.recalled\n      ? _vm.messageSelector.messages.includes(message)\n      : null\n    var m1 =\n      !message.recalled && message.type === \"text\"\n        ? _vm.renderTextMessage(message)\n        : null\n    var m2 =\n      !message.recalled && message.type === \"video\"\n        ? _vm.getImageHeight(\n            message.payload.thumbnail.width,\n            message.payload.thumbnail.height\n          )\n        : null\n    var g2 =\n      !message.recalled && message.type === \"file\"\n        ? (message.payload.size / 1024).toFixed(2)\n        : null\n    var g3 =\n      !message.recalled && message.type === \"audio\"\n        ? Math.ceil(message.payload.duration)\n        : null\n    var g4 =\n      !message.recalled && message.type === \"audio\"\n        ? Math.ceil(message.payload.duration) || 1\n        : null\n    return {\n      $orig: $orig,\n      m0: m0,\n      g0: g0,\n      g1: g1,\n      m1: m1,\n      m2: m2,\n      g2: g2,\n      g3: g3,\n      g4: g4,\n    }\n  })\n  var l1 =\n    !_vm.videoPlayer.visible &&\n    !_vm.messageSelector.visible &&\n    _vm.emoji.visible\n      ? _vm.__map(_vm.emoji.map, function (emojiItem, emojiKey, index) {\n          var $orig = _vm.__get_orig(emojiItem)\n          return {\n            $orig: $orig,\n            $index: index,\n          }\n        })\n      : null\n  _vm.$mp.data = Object.assign(\n    {},\n    {\n      $root: {\n        l0: l0,\n        l1: l1,\n      },\n    }\n  )\n}\nvar recyclableRender = false\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns, recyclableRender, components }","import mod from \"-!../../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/babel-loader/lib/index.js!../../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--13-1!../../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/script.js!../../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./privateChat.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/babel-loader/lib/index.js!../../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--13-1!../../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/script.js!../../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./privateChat.vue?vue&type=script&lang=js&\"","<template>\n  <view class=\"chatInterface\" @contextmenu.prevent=\"\">\n\t  \n\t \n\t<tui-navigation-bar backgroundColor=\"#fff\" :isFixed=\"true\" :isOpacity=\"false\">\n\t\t<view class=\"nav\">\n\t\t\t<tui-icon name=\"arrowleft\" size=\"25\" ></tui-icon>\n\t\t\t<view class=\"username\" v-if=\"friend\">{{ friend.username }}</view>\n\t\t\t<tui-icon name=\"more-fill\" size=\"22\"></tui-icon>\n\t\t</view>\n\t</tui-navigation-bar>\n\t \n    <view class=\"scroll-view\">\n      <image v-if=\"history.loading\" class=\"history-loaded\" src=\"../../../static/images/chat/loading.svg\"/>\n      <view v-else :class=\"history.allLoaded ? 'history-loaded':'load'\" @click=\"loadHistoryMessage(false)\">\n        <view>{{ history.allLoaded ? '无更多的历史消息' : '获取历史消息' }}</view>\n      </view>\n\n      <checkbox-group @change=\"selectMessages\">\n        <!--消息记录-->\n        <view v-for=\"(message,index) in history.messages\" :key=\"message.messageId\">\n          <!--时间显示，类似于微信，隔5分钟不发言，才显示时间-->\n          <view class=\"time-lag\">\n            {{ renderMessageDate(message, index) }}\n          </view>\n          <view class=\"message-recalled\" v-if=\"message.recalled\">\n            <view v-if=\"message.recaller.id === currentUser.id\" class=\"message-recalled-self\">\n              <view>你撤回了一条消息</view>\n              <span v-if=\"message.type === 'text' && Date.now()-message.timestamp< 60 * 1000 \"\n                    @click=\"editRecalledMessage(message.payload.text)\">重新编辑</span>\n            </view>\n            <view v-else>{{ message.recaller.data.name }}撤回了一条消息</view>\n          </view>\n          <view class=\"message-item\" v-else>\n            <view class=\"message-item-checkbox\">\n              <checkbox v-show=\"messageSelector.visible && message.status !== 'sending'\" :value=\"message.messageId\"\n                        :checked=\"messageSelector.messages.includes(message)\"/>\n            </view>\n            <view class=\"message-item-content\" :class=\"{'self' : message.senderId ===  currentUser.id}\">\n              <view class=\"avatar\">\n                <image :src=\"message.senderId === currentUser.id? currentUser.avatar : friend.avatar\"  mode=\"aspectFill\"   style=\"width: 80rpx; height: 80rpx; border-radius: 50%;\"></image>\n              </view>\n\n              <view class=\"content\" @click.right=\"showActionPopup(message)\" @longpress=\"showActionPopup(message)\">\n                <view class=\"message-payload\">\n                  <b class=\"pending\" v-if=\"message.status === 'sending'\"></b>\n                  <b class=\"send-fail\" v-if=\"message.status === 'fail'\"></b>\n                  <view :class=\"message.senderId === currentUser.id?'text':'text-friend'\" v-if=\"message.type === 'text'\" v-html=\"renderTextMessage(message)\"></view>\n                  <image v-if=\"message.type === 'image'\"\n                     :data-url=\"message.payload.url\"\n                     :src=\"message.payload.thumbnail\"\n                     class=\"image-content\"\n                     mode=\"heightFix\"\n                     @click=\"showImageFullScreen\"\n                  ></image>\n                  <view class=\"video-snapshot\" v-if=\"message.type === 'video'\" :data-url=\"message.payload.video.url\"\n                        @click=\"playVideo\">\n                    <image\n                      :src=\"message.payload.thumbnail.url\"\n                      :style=\"{height: getImageHeight(message.payload.thumbnail.width,message.payload.thumbnail.height)+'rpx' }\"\n                      mode=\"heightFix\"\n                    ></image>\n                    <view class=\"video-play-icon\"></view>\n                  </view>\n                  <view class=\"file-content\" v-if=\"message.type === 'file'\">\n                    <view class=\"file-info\">\n                      <span class=\"file-name\">{{ message.payload.name }}</span>\n                      <span class=\"file-size\">{{ (message.payload.size / 1024).toFixed(2) }}KB</span>\n                    </view>\n                    <image class=\"file-img\" src=\"../../../static/images/chat/file-icon.png\"></image>\n                  </view>\n                  <view v-if=\"message.type ==='audio'\" class=\"audio-content\" @click=\"playAudio(message)\">\n                    <view class=\"audio-facade\" :style=\"{width:Math.ceil(message.payload.duration)*7 + 50 + 'px'}\">\n                      <view\n                        class=\"audio-facade-bg\"\n                        :class=\"{'play-icon':audioPlayer.playingMessage && audioPlayer.playingMessage.messageId === message.messageId}\"\n                      ></view>\n                      <view>{{Math.ceil(message.payload.duration) || 1}}<span>\"</span></view>\n                    </view>\n                  </view>\n                </view>\n                \n\t\t\t\t<view v-if=\"message.senderId === currentUser.id\" :class=\"message.read ?'message-read':'message-unread'\">\n                    <view v-if=\"message.status === 'success'\">{{ message.read ? '已读' : '未读' }}</view>\n                  </view>\n                </view>\n            </view>\n          </view>\n        </view>\n      </checkbox-group>\n    </view>\n    <view class=\"action-box\" v-if=\"!videoPlayer.visible && !messageSelector.visible\">\n      <view class=\"action-top\">\n        <view @click=\"switchAudioKeyboard\">\n          <image class=\"more\" v-if=\"audio.visible\" src=\"../../../static/images/chat/jianpan.png\"></image>\n          <image class=\"more\" v-else src=\"../../../static/images/chat/audio.png\"></image>\n        </view>\n        <view v-if=\"audio.visible\" class=\"record-input\" @click=\"onRecordStart\" @touchend.stop=\"onRecordEnd\" @touchstart.stop=\"onRecordStart\">\n          {{ audio.recording ? '松开发送' : '按住录音' }}\n        </view>\n        <!-- GoEasyIM最大支持3k的文本消息，如需发送长文本，需调整输入框maxlength值 -->\n        <input v-else v-model=\"text\" @confirm=\"sendTextMessage\" class=\"consult-input\" maxlength=\"700\" placeholder=\"发送消息\" type=\"text\" />\n        <view @click=\"switchEmojiKeyboard\">\n          <image class=\"more\" v-if=\"emoji.visible\" src=\"../../../static/images/chat/jianpan.png\"></image>\n          <image class=\"more\" v-else src=\"../../../static/images/chat/emoji.png\"></image>\n        </view>\n        <view>\n          <image @click=\"showOtherTypesMessagePanel()\" class=\"more\" src=\"../../../static/images/chat/more.png\"/>\n        </view>\n        <view v-if=\"text\" class=\"send-btn-box\">\n          <text class=\"btn\" @click=\"sendTextMessage()\">发送</text>\n        </view>\n      </view>\n      <!--展示表情列表-->\n      <view class=\"action-bottom action-bottom-emoji\" v-if=\"emoji.visible\">\n        <image class=\"emoji-item\" v-for=\"(emojiItem, emojiKey, index) in emoji.map\" :key=\"index\"\n               :src=\"emoji.url + emojiItem\" @click=\"chooseEmoji(emojiKey)\"></image>\n      </view>\n      <!--其他类型消息面板-->\n      <view v-if=\"otherTypesMessagePanelVisible\" class=\"action-bottom\">\n        <view class=\"more-icon\">\n          <image @click=\"sendImageMessage()\" class=\"operation-icon\" src=\"../../../static/images/chat/picture.png\"></image>\n          <view class=\"operation-title\">图片</view>\n        </view>\n        <view class=\"more-icon\">\n          <image @click=\"sendVideoMessage()\" class=\"operation-icon\" src=\"../../../static/images/chat/video.png\"></image>\n          <view class=\"operation-title\">视频</view>\n        </view>\n      </view>\n    </view>\n    <view class=\"action-popup\" @touchmove.stop.prevent v-if=\"actionPopup.visible\">\n      <view class=\"layer\"></view>\n      <view class=\"action-list\">\n        <view class=\"action-item\" @click=\"deleteSingleMessage\">删除</view>\n        <view class=\"action-item\" v-if=\"actionPopup.recallable\" @click=\"recallMessage\">撤回</view>\n        <view class=\"action-item\" @click=\"showCheckBox\">多选</view>\n        <view class=\"action-item\" @click=\"hideActionPopup\">取消</view>\n      </view>\n    </view>\n    <view class=\"messageSelector-box\" v-if=\"messageSelector.visible\">\n      <image class=\"messageSelector-btn\" @click=\"deleteMultipleMessages\" src=\"../../../static/images/chat/delete.png\"></image>\n    </view>\n    <view class=\"record-loading\" v-if=\"audio.recording\"></view>\n    <video v-if=\"videoPlayer.visible\" :src=\"videoPlayer.url\" id=\"videoPlayer\"\n           @fullscreenchange=\"onVideoFullScreenChange\"></video>\n  </view>\n</template>\n\n<script>\n  import EmojiDecoder from '@/utils/EmojiDecoder.js';\n  import {formatDate} from '@/utils/utils.js';\n  import {getUserInfo} from '@/api/user.js'\n\n  const IMAGE_MAX_WIDTH = 200;\n  const IMAGE_MAX_HEIGHT = 150;\n  const recorderManager = uni.getRecorderManager();\n  export default {\n    name: 'privateChat',\n    data() {\n      const emojiUrl = 'https://imgcache.qq.com/open/qcloud/tim/assets/emoji/';\n      const emojiMap = {\n        '[么么哒]': 'emoji_3@2x.png',\n        '[乒乓]': 'emoji_4@2x.png',\n        '[便便]': 'emoji_5@2x.png',\n        '[信封]': 'emoji_6@2x.png',\n        '[偷笑]': 'emoji_7@2x.png',\n        '[傲慢]': 'emoji_8@2x.png'\n      };\n      return {\n        //聊天文本框\n\t\t\n        text: '',\n        friend: null,\n        to: {},// 作为createMessage的参数\n        currentUser: null,\n\n        //定义表情列表\n        emoji: {\n          url: emojiUrl,\n          map: emojiMap,\n          visible: false,\n          decoder: new EmojiDecoder(emojiUrl, emojiMap),\n        },\n        //是否展示‘其他消息类型面板’\n        otherTypesMessagePanelVisible: false,\n       \n        history: {\n          messages: [],\n          allLoaded: false,\n          loading: false\n        },\n        audio: {\n          startTime: null,\n          //语音录音中\n          recording: false,\n          //录音按钮展示\n          visible: false\n        },\n        audioPlayer: {\n          innerAudioContext: null,\n          playingMessage: null,\n        },\n        videoPlayer: {\n          visible: false,\n          url: '',\n          context: null\n        },\n        // 展示消息删除弹出框\n        actionPopup: {\n          visible: false,\n          message: null,\n          recallable: false,\n        },\n        // 消息选择\n        messageSelector: {\n          visible: false,\n          messages: []\n        }\n      }\n    },\n    onLoad(options) {\n      //聊天对象\n      let id = options.to;\n\t  this.getUserInfo(id);\n    },\n    onShow() {\n      this.otherTypesMessagePanelVisible = false;\n      this.emoji.visible = false;\n    },\n    onReady() {\n      // this.loadHistoryMessage(true);\n      // this.videoPlayer.context = uni.createVideoContext('videoPlayer', this);\n    },\n    onPullDownRefresh(e) {\n      this.loadHistoryMessage(false);\n    },\n    onUnload() {\n      //退出聊天页面之前，清空监听器\n      this.goEasy.im.off(this.GoEasy.IM_EVENT.PRIVATE_MESSAGE_RECEIVED, this.onMessageReceived);\n      this.goEasy.im.off(this.GoEasy.IM_EVENT.MESSAGE_DELETED, this.onMessageDeleted);\n    },\n    methods: {\n\t\t\n\t  getUserInfo(id){\n\t\t  let params = {\n\t\t\t  uid: id\n\t\t  }\n\t\t  getUserInfo(params).then(res=>{\n\t\t\t  this.friend = res.data\t\t\t  \n\t\t\t  this.currentUser = getApp().globalData.currentUser;\n\t\t\t  \n\t\t\t  this.to = {\n\t\t\t    id: this.friend.id,\n\t\t\t    type: this.GoEasy.IM_SCENE.PRIVATE,\n\t\t\t    data: {\n\t\t\t      name: this.friend.username,\n\t\t\t      avatar: this.friend.avatar\n\t\t\t    }\n\t\t\t  };\n\t\t\t  \n\t\t\t  this.initialGoEasyListeners();\n\t\t\t  // 语音播放器\n\t\t\t  this.initialAudioPlayer();\n\t\t\t  // 录音监听器\n\t\t\t  this.initRecorderListeners();\n\t\t\t  \n\t\t\t  this.loadHistoryMessage(true);\n\t\t\t  this.videoPlayer.context = uni.createVideoContext('videoPlayer', this);\n\t\t\t  uni.setNavigationBarTitle({ title: this.friend.name });\n\t\t  })\n\t\t  \n\t  },\n      //渲染文本消息，如果包含表情，替换为图片\n      //todo:本不需要该方法，可以在标签里完成，但小程序有兼容性问题，被迫这样实现\n      renderTextMessage(message) {\n        return '<span class=\"text-content\">' + this.emoji.decoder.decode(message.payload.text) + '</span>'\n      },\n      //像微信那样显示时间，如果有几分钟没发消息了，才显示时间\n      //todo:本不需要该方法，可以在标签里完成，但小程序有兼容性问题，被迫这样实现\n      renderMessageDate(message, index) {\n        if (index === 0) {\n          return formatDate(message.timestamp)\n        } else {\n          if (message.timestamp - this.history.messages[index - 1].timestamp > 5 * 60 * 1000) {\n            return formatDate(message.timestamp)\n          }\n        }\n        return '';\n      },\n      initialGoEasyListeners() {\n        // 监听私聊消息\n        this.goEasy.im.on(this.GoEasy.IM_EVENT.PRIVATE_MESSAGE_RECEIVED, this.onMessageReceived);\n        //监听消息删除\n        this.goEasy.im.on(this.GoEasy.IM_EVENT.MESSAGE_DELETED, this.onMessageDeleted);\n      },\n      onMessageReceived (message) {\n        let senderId = message.senderId;\n        let receiverId = message.receiverId;\n        let friendId = this.currentUser.id === senderId ? receiverId : senderId;\n        if (friendId === this.friend.id) {\n          this.history.messages.push(message);\n          //聊天时，收到消息标记为已读\n          this.markPrivateMessageAsRead();\n          //收到新消息，是滚动到最底部\n          this.scrollToBottom();\n        }\n      },\n      onMessageDeleted (deletedMessages) {\n        deletedMessages.forEach(message => {\n          let senderId = message.senderId;\n          let receiverId = message.receiverId;\n          let friendId = this.currentUser.id === senderId ? receiverId : senderId;\n          if (friendId === this.friend.id) {\n            let index = this.history.messages.indexOf(message);\n            if (index > -1) {\n              this.history.messages.splice(index, 1);\n            }\n          }\n        });\n      },\n      initialAudioPlayer () {\n        this.audioPlayer.innerAudioContext = uni.createInnerAudioContext();\n        this.audioPlayer.innerAudioContext.onEnded(() => {\n          this.audioPlayer.playingMessage = null;\n        });\n        this.audioPlayer.innerAudioContext.onStop(() => {\n          this.audioPlayer.playingMessage = null;\n        });\n      },\n      initRecorderListeners() {\n        // 监听录音开始\n        recorderManager.onStart(() => {\n          this.audio.recording = true;\n          this.audio.startTime = Date.now();\n        });\n        //录音结束后，发送\n        recorderManager.onStop((res) => {\n          let endTime = Date.now();\n          this.audio.recording = false;\n          let duration = endTime - this.audio.startTime;\n          if (duration < 1000) {\n            uni.showToast({\n              icon: 'error',\n              title: '录音时间太短',\n              duration: 500\n            });\n            return;\n          }\n          res.duration = duration;\n          this.goEasy.im.createAudioMessage({\n            to: this.to,\n            file: res,\n            notification: {\n              title: this.currentUser.username + '发来一段语音',\n              body: '[语音消息]',\t\t// 字段最长 50 字符\n              sound: 'message',\n              badge: '+1'\n            },\n            onProgress: function (progress) {\n              console.log(progress)\n            },\n            onSuccess: (message) => {\n              this.sendMessage(message);\n            },\n            onFailed: (e) => {\n              console.log('error :', e);\n            }\n          });\n        });\n        // 监听录音报错\n        recorderManager.onError((res) => {\n          this.audio.recording = false;\n          recorderManager.stop();\n          uni.showToast({\n            icon: 'none',\n            title: '录音失败,请检查麦克风权限',\n            duration: 1000\n          });\n        })\n      },\n      /**\n       * 核心就是设置高度，产生明确占位\n       *\n       * 小  (宽度和高度都小于预设尺寸)\n       *    设高=原始高度\n       * 宽 (宽度>高度)\n       *    高度= 根据宽度等比缩放\n       * 窄  (宽度<高度)或方(宽度=高度)\n       *    设高=MAX height\n       *\n       * @param width,height\n       * @returns number\n       */\n      getImageHeight(width, height) {\n        if (width < IMAGE_MAX_WIDTH && height < IMAGE_MAX_HEIGHT) {\n          return height * 2;\n        } else if (width > height) {\n          return (IMAGE_MAX_WIDTH / width * height) * 2;\n        } else if (width === height || width < height) {\n          return IMAGE_MAX_HEIGHT * 2;\n        }\n      },\n      sendMessage(message) {\n        this.history.messages.push(message);\n        this.scrollToBottom();\n        this.goEasy.im.sendMessage({\n          message: message,\n          onSuccess: function (message) {\n\t\t\t  \n            console.log('发送成功.', message);\n          },\n          onFailed: function (error) {\n            if (error.code === 507) {\n              console.log('发送语音/图片/视频/文件失败，没有配置OSS存储，详情参考：https://docs.goeasy.io/2.x/im/message/media/alioss');\n            } else {\n              console.log('发送失败:', error);\n            }\n          }\n        });\n      },\n      sendTextMessage() {\n        if (this.text.trim() !== '') {\n          let body = this.text;\n          if (this.text.length >= 50) {\n            body = this.text.substring(0, 30) + '...';\n          }\n          this.goEasy.im.createTextMessage({\n            text: this.text,\n            to: this.to,\n            notification: {\n              title: this.currentUser.username + '发来一段文字',\n              body: body,\n              sound: 'message',\n              badge: '+1'\n            },\n            onSuccess: (message) => {\n              this.sendMessage(message);\n            },\n            onFailed: (e) => {\n              console.log('error :', e);\n            }\n          });\n        }\n        this.text = '';\n      },\n      sendVideoMessage() {\n        uni.chooseVideo({\n          success: (res) => {\n            this.goEasy.im.createVideoMessage({\n              to: this.to,\n              file: res,\n              notification: {\n                title: this.currentUser.username + '发来一个视频',\n                body: '[视频消息]',\t\t// 字段最长 50 字符\n                sound: 'message',\n                badge: '+1'\n              },\n              onProgress: function (progress) {\n                console.log(progress)\n              },\n              onSuccess: (message) => {\n                this.otherTypesMessagePanelVisible = false;\n                this.sendMessage(message);\n              },\n              onFailed: (e) => {\n                console.log('error :', e);\n              }\n            });\n          }\n        })\n      },\n      sendImageMessage() {\n        uni.chooseImage({\n          count: 9,\n          success: (res) => {\n            res.tempFiles.forEach(file => {\n              this.goEasy.im.createImageMessage({\n                to: this.to,\n                file: file,\n                notification: {\n                  title: this.currentUser.username + '发来一张图片',\n                  body: '[图片消息]',\t\t// 字段最长 50 字符\n                  sound: 'message',\n                  badge: '+1'\n                },\n                onProgress: function (progress) {\n                  console.log(progress)\n                },\n                onSuccess: (message) => {\n                  this.otherTypesMessagePanelVisible = false;\n                  this.sendMessage(message);\n                },\n                onFailed: (e) => {\n                  console.log('error :', e);\n                }\n              });\n            })\n          }\n        });\n      },\n      \n      showActionPopup(message) {\n        const MAX_RECALLABLE_TIME = 3 * 60 * 1000; //3分钟以内的消息才可以撤回\n        this.messageSelector.messages = [message];\n        if ((Date.now() - message.timestamp) < MAX_RECALLABLE_TIME && message.senderId === this.currentUser.id && message.status === 'success') {\n          this.actionPopup.recallable = true;\n        } else {\n          this.actionPopup.recallable = false;\n        }\n        this.actionPopup.visible = true;\n      },\n      hideActionPopup () {\n        this.actionPopup.visible = false;\n        this.actionPopup.message = null;\n      },\n      deleteSingleMessage() {\n        uni.showModal({\n          content: '确认删除？',\n          success: (res) => {\n            this.actionPopup.visible = false;\n            if (res.confirm) {\n              this.deleteMessage();\n            }\n          },\n        })\n      },\n      deleteMultipleMessages() {\n        if (this.messageSelector.messages.length > 0) {\n          uni.showModal({\n            content: '确认删除？',\n            success: (res) => {\n              this.messageSelector.visible = false;\n              if (res.confirm) {\n                this.deleteMessage();\n              }\n            },\n          })\n        }\n      },\n      deleteMessage() {\n        this.goEasy.im.deleteMessage({\n          messages: this.messageSelector.messages,\n          onSuccess: (result) => {\n            this.messageSelector.messages.forEach(message => {\n              let index = this.history.messages.indexOf(message);\n              if (index > -1) {\n                this.history.messages.splice(index, 1);\n              }\n            });\n            this.messageSelector.messages = [];\n          },\n          onFailed: (error) => {\n            console.log('error:', error);\n          }\n        });\n      },\n      recallMessage() {\n        this.actionPopup.visible = false;\n        this.goEasy.im.recallMessage({\n          messages: this.messageSelector.messages,\n          onSuccess: () => {\n            console.log('撤回成功');\n          },\n          onFailed: (error) => {\n            console.log('撤回失败,error:', error);\n          }\n        });\n      },\n      editRecalledMessage(text) {\n        if (this.audio.visible) {\n          this.audio.visible = false;\n        }\n        this.text = text;\n      },\n      showCheckBox() {\n        this.messageSelector.messages = [];\n        this.messageSelector.visible = true;\n        this.actionPopup.visible = false;\n      },\n      selectMessages(e) {\n        const selectedMessageIds = e.detail.value;\n        let selectedMessages = [];\n        this.history.messages.forEach(message => {\n          if (selectedMessageIds.includes(message.messageId)) {\n            selectedMessages.push(message);\n          }\n        })\n        this.messageSelector.messages = selectedMessages;\n      },\n      loadHistoryMessage(scrollToBottom) {//历史消息\n        this.history.loading = true;\n        let lastMessageTimeStamp = null;\n        let lastMessage = this.history.messages[0];\n        if (lastMessage) {\n          lastMessageTimeStamp = lastMessage.timestamp;\n        }\n        this.goEasy.im.history({\n          userId: this.friend.id,\n          lastTimestamp: lastMessageTimeStamp,\n          limit: 10,\n          onSuccess: (result) => {\n            uni.stopPullDownRefresh();\n            this.history.loading = false;\n            let messages = result.content;\n            if (messages.length === 0) {\n              this.history.allLoaded = true;\n            } else {\n              if (lastMessageTimeStamp) {\n                this.history.messages = messages.concat(this.history.messages);\n              } else {\n                this.history.messages = messages;\n              }\n              if (messages.length < 10) {\n                this.history.allLoaded = true;\n              }\n              if (scrollToBottom) {\n                this.scrollToBottom();\n                //收到的消息设置为已读\n                this.markPrivateMessageAsRead();\n              }\n            }\n          },\n          onFailed: (error) => {\n            //获取失败\n            console.log('获取历史消息失败:', error);\n            uni.stopPullDownRefresh();\n            this.history.loading = false;\n          }\n        });\n      },\n      //语音录制按钮和键盘输入的切换\n      switchAudioKeyboard() {\n        this.audio.visible = !this.audio.visible;\n        if (uni.authorize) {\n          uni.authorize({\n            scope: 'scope.record',\n            fail: () => {\n              uni.showModal({\n                title: '获取录音权限失败',\n                content: '请先授权才能发送语音消息！'\n              });\n            }\n          });\n        }\n      },\n      onRecordStart() {\n        try {\n          // 更多配置参考uniapp：https://uniapp.dcloud.net.cn/api/media/record-manager.html#getrecordermanager\n          recorderManager.start({\n            duration: 600000 // 指定录音的时长,单位 ms\n          });\n        } catch (e) {\n          uni.showModal({\n            title: '录音错误',\n            content: '请在app和小程序端体验录音，Uni官方明确H5不支持getRecorderManager, 详情查看Uni官方文档'\n          });\n        }\n      },\n      onRecordEnd() {\n        try {\n          recorderManager.stop();\n        } catch (e) {\n          console.log(e);\n        }\n      },\n      showImageFullScreen(e) {\n        let imagesUrl = [e.currentTarget.dataset.url];\n        uni.previewImage({\n          urls: imagesUrl\n        });\n      },\n      playVideo(e) {\n        this.videoPlayer.visible = true;\n        this.videoPlayer.url = e.currentTarget.dataset.url;\n        this.$nextTick(() => {\n          this.videoPlayer.context.requestFullScreen({\n            direction: 0\n          });\n          this.videoPlayer.context.play();\n        });\n      },\n      playAudio (audioMessage) {\n        let playingMessage = this.audioPlayer.playingMessage;\n\n        if (playingMessage) {\n          this.audioPlayer.innerAudioContext.stop();\n          // 如果点击的消息正在播放，就认为是停止播放操作\n          if (playingMessage === audioMessage) {\n            return;\n          }\n        }\n        this.audioPlayer.playingMessage = audioMessage;\n        this.audioPlayer.innerAudioContext.src = audioMessage.payload.url;\n        this.audioPlayer.innerAudioContext.play();\n      },\n      onVideoFullScreenChange(e) {\n        //当退出全屏播放时，隐藏播放器\n        if (this.videoPlayer.visible && !e.detail.fullScreen) {\n          this.videoPlayer.visible = false;\n          this.videoPlayer.context.stop();\n        }\n      },\n      messageInputFocusin() {\n        this.otherTypesMessagePanelVisible = false;\n        this.emoji.visible = false;\n      },\n      switchEmojiKeyboard() {\n        this.emoji.visible = !this.emoji.visible;\n        this.otherTypesMessagePanelVisible = false;\n      },\n      showOtherTypesMessagePanel() {\n        this.otherTypesMessagePanelVisible = !this.otherTypesMessagePanelVisible;\n        this.emoji.visible = false;\n      },\n      chooseEmoji(emojiKey) {\n        this.text += emojiKey;\n      },\n      showOrderMessageList() {\n        this.orderList.orders = restApi.getOrderList();\n        this.orderList.visible = true;\n      },\n      hideOrderMessageList() {\n        this.orderList.visible = false;\n      },\n      scrollToBottom() {\n        this.$nextTick(() => {\n          uni.pageScrollTo({\n            scrollTop: 2000000,\n            duration: 0\n          });\n        });\n      },\n      markPrivateMessageAsRead() {\n        this.goEasy.im.markMessageAsRead({\n          id: this.to.id,\n          type: this.to.type,\n          onSuccess: function () {\n            console.log('标记私聊已读成功');\n          },\n          onFailed: function (error) {\n            console.log(\"标记私聊已读失败\", error);\n          }\n        });\n      }\n    }\n  }\n</script>\n\n<style scoped>\n\t@import url(./privateChat.css);\n</style>\n","import mod from \"-!../../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/loaders/stylePostLoader.js!../../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--6-oneOf-1-2!../../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-3!../../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./privateChat.vue?vue&type=style&index=0&id=cd130814&scoped=true&lang=css&\"; export default mod; export * from \"-!../../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/loaders/stylePostLoader.js!../../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--6-oneOf-1-2!../../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-3!../../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./privateChat.vue?vue&type=style&index=0&id=cd130814&scoped=true&lang=css&\"","// extracted by mini-css-extract-plugin\n    if(module.hot) {\n      // 1737278863317\n      var cssReload = require(\"/Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js\")(module.id, {\"hmr\":true,\"publicPath\":\"/\",\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  "],"sourceRoot":""}